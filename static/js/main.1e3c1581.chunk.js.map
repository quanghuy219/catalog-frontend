{"version":3,"sources":["utils/Constant.jsx","utils/api/BaseApi.jsx","actions/User.jsx","utils/api/UserApi.jsx","components/Navbar.jsx","actions/Items.jsx","utils/api/ItemApi.jsx","actions/Categories.jsx","utils/api/CategoryApi.jsx","components/Home.jsx","components/Form.jsx","components/Login.jsx","components/Item.jsx","components/Notification.jsx","components/Edit.jsx","App.js","reducers/Items.jsx","reducers/User.jsx","reducers/Categories.jsx","reducers/Error.jsx","reducers/index.jsx","serviceWorker.js","index.js"],"names":["URL","BaseApi","uri","fetch","concat","then","response","jsonResponse","json","ok","err","params","requireToken","arguments","length","undefined","options","method","headers","Content-Type","body","JSON","stringify","token","localStorage","getItem","Authorization","userApi","Object","esm_get","getPrototypeOf","UserApi","prototype","this","call","LOGIN","LOGOUT","Navbar","props","_this","classCallCheck","possibleConstructorReturn","onClickLogout","bind","assertThisInitialized","objectSpread","logout","NavbarContent","user","name","react_default","a","createElement","className","type","onClick","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","connect","state","dispatch","removeItem","itemApi","data","ItemApi","itemID","FETCH_ITEMS","CREATE_ITEM","handleError","error","message","fetchItem","itemId","get","res","categoryApi","CategoryApi","FETCH_CATEGORIES","fetchCategories","categories","Home","showItemByCategory","fetchItems","categoryID","fetchItemsByCategory","_this2","style","borderRight","NavLink","map","category","key","replace","activeStyle","color","items","item","defaultProps","catch","Form","description","isEditing","handleChangeName","handleChangeDescription","handleChangeCategory","submit","edit","create","nextProps","setState","category_id","e","target","value","parseInt","createItem","history","push","_this3","updateItem","onEditSuccess","onSubmit","preventDefault","htmlFor","onChange","maxLength","required","rows","post","put","Login","onSigninSuccess","onSigninFailure","code","login","toast","google_login_default","scope","clientId","accessType","responseType","prompt","onSuccess","onFailure","setItem","Item","user_id","match","item_id","delete","deleteItem","EditButtons","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","Notification","_nextProps$error","react_toastify_lib","hideProgressBar","autoClose","Edit","_this$state","console","log","components_Form","App","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","components_Notification","initialState","page","offset","itemsReducer","action","toConsumableArray","parse","userReducer","categoriesReducer","errorReducer","rootReducers","combineReducers","Boolean","window","location","hostname","store","createStore","reducers","applyMiddleware","logger","ReduxPromise","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8WAEeA,EAFH,wCCyFGC,8FAtFTC,GACF,OAAOC,MAAK,GAAAC,OAAIJ,GAAJI,OAAUF,IACnBG,KAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,OAC9B,OAAIF,EAASG,GACJF,EAEFA,EAAaF,KAAK,SAACK,GAAU,MAAMA,mCAI3CR,EAAKS,GAA6B,IAArBC,IAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC/BG,EAAU,CACdC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUX,IAGvB,GAAIC,EAAc,CAChB,IAAMW,EAAQC,aAAaC,QAAQ,SACnCT,EAAQE,QAAQQ,cAAhB,UAAAtB,OAA0CmB,GAG5C,OAAOpB,MAAK,GAAAC,OAAIJ,GAAJI,OAAUF,GAAOc,GAC1BX,KAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,OAE9B,OAAIF,EAASG,GACJF,EAGFA,EAAaF,KAAK,SAACK,GAAU,MAAMA,kCAI5CR,EAAKS,GAA6B,IAArBC,IAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC9BG,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUX,IAGvB,GAAIC,EAAc,CAChB,IAAMW,EAAQC,aAAaC,QAAQ,SACnCT,EAAQE,QAAQQ,cAAhB,UAAAtB,OAA0CmB,GAG5C,OAAOpB,MAAK,GAAAC,OAAIJ,GAAJI,OAAUF,GAAOc,GAC1BX,KAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,OAC9B,OAAIF,EAASG,GACJF,EAEFA,EAAaF,KAAK,SAACK,GAAU,MAAMA,qCAIzCR,EAAKS,GAA6B,IAArBC,IAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACjCG,EAAU,CACdC,OAAQ,SACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUX,IAGvB,GAAIC,EAAc,CAChB,IAAMW,EAAQC,aAAaC,QAAQ,SACnCT,EAAQE,QAAQQ,cAAhB,UAAAtB,OAA0CmB,GAG5C,OAAOpB,MAAK,GAAAC,OAAIJ,GAAJI,OAAUF,GAAOc,GAC1BX,KAAK,SAACC,GACL,IAAMC,EAAeD,EAASE,OAC9B,OAAIF,EAASG,GACJF,EAEFA,EAAaF,KAAK,SAACK,GAAU,MAAMA,eClF5CiB,EAAU,kLCCRzB,EAAKS,GACT,OAAOiB,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAAG,EAAAC,WAAA,OAAAC,MAAAC,KAAAD,KAAW/B,EAAKS,GAAQ,UAFbV,IDETkC,EAAQ,QACRC,EAAS,aEAhBC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAAI,IACjBE,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAAS,GAAAH,KAAAD,KAAMK,KACDI,cAAgBH,EAAKG,cAAcC,KAAnBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAFJA,+EAMNX,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClBQ,0CAIN,IACIC,EADET,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OA2BxB,OAxBES,EADET,EAAMU,KAAKC,KAEXC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAyBf,EAAMU,KAAKC,MAClDC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,4BACVE,QAAStB,KAAKS,eAHhB,YAYJQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,SAASJ,UAAU,8BAA5B,WAONH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,eAAeI,GAAG,KAAlC,WACAP,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVC,KAAK,SACLI,cAAY,WACZC,cAAY,iBACZC,gBAAc,gBACdC,gBAAc,QACdC,aAAW,qBAEXZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAwCU,GAAG,iBACxDb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXN,YAvDQiB,IAAMC,WA2EZC,cAZS,SAAAC,GAAK,MAC3B,CACEnB,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACEtB,OAAQ,kBAAMsB,EFrCT,SAACA,GAEN,IAAMpB,EAAOxB,aAAaC,QAAQ,QAC5BF,EAAQC,aAAaC,QAAQ,SAC/BuB,GACFxB,aAAa6C,WAAW,QAEtB9C,GACFC,aAAa6C,WAAW,SAE1BD,EAAS,CACPd,KAAMlB,SE8BG8B,CAA6C7B,WC9EtDiC,EAAU,iLCCTC,GACH,OAAO3C,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAA4C,EAAAxC,WAAA,OAAAC,MAAAC,KAAAD,KAAW,aAAcsC,+BAG9BE,EAAQF,GACV,OAAO3C,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAA4C,EAAAxC,WAAA,MAAAC,MAAAC,KAAAD,KAAA,cAAA7B,OAAwBqE,GAAUF,kCAGpCE,GACL,OAAO7C,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAA4C,EAAAxC,WAAA,SAAAC,MAAAC,KAAAD,KAAA,cAAA7B,OAA2BqE,WAVhBxE,IDETyE,EAAc,cACdC,EAAc,cAE3B,SAASC,EAAYlE,EAAK0D,GACxB,IAAMS,EAAQ,CACZC,QAAUpE,EAAIoE,QAAWpE,EAAIoE,QAAU,wBACvCD,MAAQnE,EAAImE,MAASnE,EAAImE,MAAQ,IAEnCT,EAAS,CACPd,KAAM,QACNwB,QAASD,EAAMC,QACfD,MAAOA,EAAMA,QAGX,UAAWA,EAAMA,OACnBT,EAAS,CACPd,KAAM,WA4BL,SAASyB,EAAUC,GACxB,OAAOV,EAAQW,IAAR,cAAA7E,OAA0B4E,IAC9B3E,KAAK,SAAA6E,GAAG,OAAKA,EAAIX,WEhDhBY,EAAc,gLCCdjF,GACF,OAAO0B,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAAwD,EAAApD,WAAA,MAAAC,MAAAC,KAAAD,KAAU/B,UAFKD,IDEboF,EAAmB,mBAEzB,SAASC,IACd,OAAO,SAAAlB,GAAQ,OAAIe,EAAYF,IAAI,mBAChC5E,KAAK,SAAA6E,GAAG,OACPd,EAAS,CACPd,KAAM+B,EACNE,WAAYL,EAAIX,KAAKgB,oBEJvBC,cACJ,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAAuD,IACjBjD,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAA4D,GAAAtD,KAAAD,KAAMK,KACDmD,mBAAqBlD,EAAKkD,mBAAmB9C,KAAxBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAC1BD,EAAMoD,aACNpD,EAAMgD,kBAJW/C,kFAOAoD,GACN/D,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClBsD,qBAAqBD,oCAGpB,IAAAE,EAAA5D,KACDK,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACxB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0ByC,MAAO,CAAEC,YAAa,sBAC7D7C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,cACAH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASvC,GAAG,IAAIF,QAAS,kBAAMjB,EAAMoD,eAArC,QAEFpD,EAAMiD,WAAWU,IAAI,SAAAC,GAAQ,OAC3BhD,EAAAC,EAAAC,cAAA,MAAI+C,IAAKD,EAASnC,IAChBb,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CACEvC,GAAE,IAAArD,OAAM8F,EAASjD,KAAKmD,QAAQ,IAAK,MACnCC,YAAa,CACXC,MAAO,OAET/C,QAAS,WACPsC,EAAKJ,mBAAmBS,EAASnC,MAGlCmC,EAASjD,WAOtBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAEPf,EAAMU,KAAKC,KACNC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,aAAT,YAEF,GAGTP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,gBACAH,EAAAC,EAAAC,cAAA,UAEId,EAAMiE,MAAMA,MAAMN,IAAI,SAAAO,GAAI,OACxBtD,EAAAC,EAAAC,cAAA,MAAI+C,IAAKK,EAAKzC,IACZb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,SAAArD,OAAWoG,EAAKzC,KAAOyC,EAAKvD,MACpCC,EAAAC,EAAAC,cAAA,gBAEGoD,EAAKN,SAASjD,KAFjB,kBAtDCe,IAAMC,WA0EzBuB,EAAKiB,aAAe,CAClBf,WAAY,KACZJ,gBAAiB,MAGnB,IAgBepB,cAhBS,SAAAC,GAAK,MAC3B,CACEoC,MAAOpC,EAAMoC,MACbhB,WAAYpB,EAAMoB,WAClBvC,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACEsB,WAAY,kBAAMtB,EJtEb,SAAAA,GAAQ,OAAIE,EAAQW,IAAI,cAC5B5E,KAAK,SAAA6E,GAAG,OACPd,EAAS,CACPd,KAAMoB,EACN6B,MAAOrB,EAAIX,KAAKgC,aImEpBjB,gBAAiB,kBAAMlB,EAASkB,MAChCM,qBAAsB,SAAAD,GAAU,OAAIvB,EJ/DjC,SAA8BuB,GACnC,OAAO,SAAAvB,GAAQ,OAAIE,EAAQW,IAAR,mBAAA7E,OAA+BuF,EAA/B,WAChBtF,KAAK,SAAA6E,GAAG,OACPd,EAAS,CACPd,KAAMoB,EACN6B,MAAOrB,EAAIX,KAAKgC,UAGnBG,MAAM,SAAChG,GACNkE,EAAYlE,EAAK0D,MIsD0BwB,CAAqBD,OAIvDzB,CAA6CsB,GChGtDmB,cACJ,SAAAA,EAAYrE,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAA0E,IACjBpE,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAA+E,GAAAzE,KAAAD,KAAMK,KACD6B,MAAQ,CACXlB,KAAMX,EAAMW,KACZ2D,YAAatE,EAAMsE,aAErBrE,EAAKsE,UAAYvE,EAAMuE,UACvBtE,EAAKuE,iBAAmBvE,EAAKuE,iBAAiBnE,KAAtBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KACxBA,EAAKwE,wBAA0BxE,EAAKwE,wBAAwBpE,KAA7Bf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAC/BA,EAAKyE,qBAAuBzE,EAAKyE,qBAAqBrE,KAA1Bf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAC5BA,EAAK0E,OAAS1E,EAAK0E,OAAOtE,KAAZf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KACdA,EAAK2E,KAAO3E,EAAK2E,KAAKvE,KAAVf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KACZA,EAAK4E,OAAS5E,EAAK4E,OAAOxE,KAAZf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAZGA,mFAgBNX,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClBgD,oEAGkB8B,GACxB,IAAM9E,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQwF,GACf,SAAU9E,EACZL,KAAKoF,SAALzF,OAAAiB,EAAA,EAAAjB,CAAA,GACKU,EAAMkE,OAGXvE,KAAKoF,SAAS,CACZC,YAAahF,EAAMiD,WAAW,GAAGxB,8CAKtBwD,GACftF,KAAKoF,SAAS,CACZpE,KAAMsE,EAAEC,OAAOC,wDAIKF,GACtBtF,KAAKoF,SAAS,CACZT,YAAaW,EAAEC,OAAOC,qDAILF,GACnBtF,KAAKoF,SAAS,CACZC,YAAaI,SAASH,EAAEC,OAAOC,MAAO,uCAKxC,IAAMtD,EAAKvC,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKkC,OACxB,SAAKA,EAAMlB,OAASkB,EAAMyC,eAGtB3E,KAAK4E,UACA5E,KAAKiF,OAEPjF,KAAKkF,2CAGL,IAAAtB,EAAA5D,KACDK,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClB6B,EAAKvC,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKkC,OACxB7B,EAAMqF,WAAWxD,GACd9D,KAAK,SAACkE,GACLsB,EAAKwB,SAAS,CACZpE,KAAM,GACN2D,YAAa,KAEXrC,GACFjC,EAAMsF,QAAQC,KAAd,SAAAzH,OAA4BmE,EAAKiC,KAAKzC,sCAKvC,IAAA+D,EAAA7F,KACCK,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClB6B,EAAKvC,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKkC,OACxB7B,EAAMyF,WAAW5D,EAAMJ,GAAII,GACxB9D,KAAK,SAACkE,GACLuD,EAAKT,SAAS,CACZpE,KAAM,GACN2D,YAAa,KAEXrC,GACFjC,EAAM0F,mDAMZ,IAAMxB,EAAI5E,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKkC,OACjB7B,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAExB,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMnC,OAAO,OAAOgH,SAAU,SAAAV,GAAC,OAAIA,EAAEW,mBACnChF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO+E,QAAQ,QAAf,OAEEjF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLS,GAAG,OACHV,UAAU,0BACVJ,KAAK,OACLwE,MAAOjB,EAAKvD,KACZmF,SAAUnG,KAAK6E,iBACfuB,UAAU,MACVC,UAAQ,MAKdpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO+E,QAAQ,YAAf,WAEEjF,EAAAC,EAAAC,cAAA,UACEW,GAAG,WACHV,UAAU,eACVJ,KAAK,cACLwE,MAAOjB,EAAKc,YACZc,SAAUnG,KAAK+E,sBAGb1E,EAAMiD,WAAWU,IAAI,SAAAC,GAAQ,OAC3BhD,EAAAC,EAAAC,cAAA,UAAQ+C,IAAKD,EAASnC,GAAI0D,MAAOvB,EAASnC,IAAKmC,EAASjD,WAOlEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO+E,QAAQ,eAAf,cAEEjF,EAAAC,EAAAC,cAAA,YACEW,GAAG,cACHV,UAAU,0BACVJ,KAAK,cACLsF,KAAK,KACLd,MAAOjB,EAAKI,YACZwB,SAAUnG,KAAK8E,wBACfuB,UAAQ,MAKdpF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASL,KAAK,UAAUwE,MAAM,gBAC1CvE,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,kBAAkBE,QAAStB,KAAKgF,QAAhE,mBAxJSjD,IAAMC,WAqKzB0C,EAAKF,aAAe,CAClBxD,KAAM,GACN2D,YAAa,GACbC,WAAW,GAGb,IAee3C,cAfS,SAAAC,GAAK,MAC3B,CACEoB,WAAYpB,EAAMoB,WAClBvC,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACEkB,gBAAiB,kBAAMlB,EAASkB,MAChCqC,WAAY,SAAAhH,GAAM,OAAIyD,GLtICG,EKsImB5D,ELrIrC,SAAAyD,GAAQ,OAAIE,EAAQkE,KAAKjE,GAC7BlE,KAAK,SAAC6E,GAKL,OAJAd,EAAS,CACPd,KAAMqB,EACN6B,KAAMtB,EAAIX,KAAKiC,OAEVtB,EAAIX,OAEZmC,MAAM,SAAChG,GACNkE,EAAYlE,EAAK0D,QAVhB,IAAoBG,GKuIvBwD,WAAY,SAACtD,EAAQ9D,GAAT,OAAoByD,ELzH7B,SAAoBK,EAAQF,GACjC,OAAO,SAAAH,GAAQ,OAAIE,EAAQmE,IAAIhE,EAAQF,GACpClE,KAAK,SAAA6E,GAAG,OAAIA,EAAIX,OAChBmC,MAAM,SAAChG,GACNkE,EAAYlE,EAAK0D,MKqHsB2D,CAAWtD,EAAQ9D,OAIjDuD,CAA6CyC,4BC1LtD+B,cACJ,SAAAA,EAAYpG,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAAyG,IACjBnG,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAA8G,GAAAxG,KAAAD,KAAMK,KACD6B,MAAQ,GACb5B,EAAKoG,gBAAkBpG,EAAKoG,gBAAgBhG,KAArBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KACvBA,EAAKqG,gBAAkBrG,EAAKqG,gBAAgBjG,KAArBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KAJNA,+EAOHsG,GACd,IAAMvG,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACxBA,EAAMwG,MAAMD,GACTxI,KAAK,kBAAMiC,EAAMsF,QAAQC,KAAK,iDAIjCkB,QAAMlE,MAAM,iFAIZ,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,CACEE,UAAU,WACV4F,MAAM,uBACNC,SAAS,2EACTC,WAAW,UACXC,aAAa,OACbC,OAAO,iBACPC,UAAWrH,KAAK0G,gBAChBY,UAAWtH,KAAK2G,kBAElB1F,EAAAC,EAAAC,cAAA,OAAKW,GAAG,mBAhCIC,IAAMC,WAmDXC,cAbS,SAAAC,GAAK,MAC3B,CACEU,MAAOV,EAAMU,MACb7B,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACE0E,MAAO,SAAAD,GAAI,OAAIzE,ET9CZ,SAAeyE,GACpB,OAAO,SAAAzE,GAAQ,OAAIzC,EAAQmH,MAAM,aAAcD,GAC5CxI,KAAK,SAACG,GACL,IAAMwC,EAAO,CACXC,KAAMzC,EAAK+D,KAAKvB,KAAKC,KACrBc,GAAIvD,EAAK+D,KAAKvB,KAAKe,IAEbxC,EAAUf,EAAK+D,KAAfhD,MASR,OARAC,aAAagI,QAAQ,OAAQnI,KAAKC,UAAU0B,IAC5CxB,aAAagI,QAAQ,QAASjI,GAC9B6C,EAAS,CACPd,KAAMnB,EACNc,KAAMD,EAAKC,KACXc,GAAIf,EAAKe,GACTxC,UAEKyB,IAER0D,MAAM,SAAChG,GACN,IAAMmE,EAAQ,CACZC,QAAUpE,EAAIoE,QAAWpE,EAAIoE,QAAU,wBACvCD,MAAQnE,EAAImE,MAASnE,EAAImE,MAAQ,IAEnC,OAAOT,EAAS,CACdd,KAAM,QACNwB,QAASD,EAAMC,QACfD,MAAOA,EAAMA,WSoBOiE,CAAMD,OAInB3E,CAA6CwE,GCpDtDe,cACJ,SAAAA,EAAYnH,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAAwH,IACjBlH,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAA6H,GAAAvH,KAAAD,KAAMK,KACD6B,MAAQ,CACXlB,KAAM,GACN2D,YAAa,GACb8C,QAAS,EACT3F,GAAI,GAENxB,EAAKkC,OAASnC,EAAMqH,MAAMhJ,OAAOiJ,QACjCrH,EAAKsH,OAAStH,EAAKsH,OAAOlH,KAAZf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KATGA,mFAYC,IAAAsD,EAAA5D,KACZK,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACxByC,EAAU9C,KAAKwC,QACZpE,KAAK,SAAAkE,GAAI,OACRsB,EAAKwB,SAALzF,OAAAiB,EAAA,EAAAjB,CAAA,GACK2C,EAAKiC,SAGXE,MAAM,kBAAMpE,EAAMsF,QAAQC,KAAK,wCAIlC,IAAMvF,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACxBA,EAAMwH,WAAW7H,KAAKwC,QACnBpE,KAAK,kBAAMiC,EAAMsF,QAAQC,KAAK,wCAIjC,IAAM1D,EAAKvC,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKkC,OAClB7B,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACpByH,EAAc,GAgBlB,OAfI5F,EAAMuF,UAAYpH,EAAMU,KAAKe,KAC/BgG,EACE7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAE,SAAArD,OAAW+D,EAAMJ,GAAjB,UAA7B,QACAb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEH,UAAU,WACVI,GAAG,KACHC,cAAY,QACZC,cAAY,kBAJd,YAYJT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKe,EAAMlB,MACXC,EAAAC,EAAAC,cAAA,WAAMe,EAAMyC,aACVmD,EAGF7G,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVU,GAAG,gBACHiG,SAAS,KACTC,KAAK,SACLC,kBAAgB,oBAChBC,cAAY,QAEZjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4G,KAAK,YACjC/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,2CAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,oBAAoB+G,eAAa,SAAjE,SAGAlH,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLD,UAAU,kBACVE,QAAStB,KAAK4H,OACdO,eAAa,SAJf,sBAzEGpG,IAAMC,WAsGVC,cAZS,SAAAC,GAAK,MAC3B,CACEnB,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACE0F,WAAY,SAAArF,GAAM,OAAIL,EP5BnB,SAAoBK,GACzB,OAAO,SAAAL,GAAQ,OAAIE,EAAQuF,OAAOpF,GAC/BpE,KAAK,SAAA6E,GAAG,OAAIA,EAAIX,OAChBmC,MAAM,SAAChG,GACNkE,EAAYlE,EAAK0D,MOwBY0F,CAAWrF,OAI/BP,CAA6CuF,GCrGtDY,2MACsBjD,GAAW,IAAAkD,EAAA1I,OAAAiB,EAAA,EAAAjB,CAAA,GACHwF,EAAUvC,OAAlCC,EAD2BwF,EAC3BxF,QAD2BwF,EAClBzF,MACjBkE,QAAMlE,MAAMC,oCAIZ,OACE5B,EAAAC,EAAAC,cAACmH,EAAA,eAAD,CAAgBC,iBAAe,EAACC,UAAW,aARtBzG,IAAMC,YAajCoG,EAAa5D,aAAe,CAC1B5B,MAAO,IAET,IAMeX,eANS,SAAAC,GAAK,MAC3B,CACEU,MAAOV,EAAMU,QAIuB,KAAzBX,CAA+BmG,GCtBxCK,eACJ,SAAAA,EAAYpI,GAAO,IAAAC,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAK,KAAAyI,IACjBnI,EAAAX,OAAAa,EAAA,EAAAb,CAAAK,KAAAL,OAAAE,EAAA,EAAAF,CAAA8I,GAAAxI,KAAAD,KAAMK,KACD6B,MAAQ,CACXlB,KAAM,GACN2D,YAAa,IAEfrE,EAAK+G,UAAY/G,EAAK+G,UAAU3G,KAAff,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAW,KANAA,mFASC,IAAAsD,EAAA5D,KACZK,EAAKV,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OACxBL,KAAKwC,OAASnC,EAAMqH,MAAMhJ,OAAOiJ,QACjC7E,EAAU9C,KAAKwC,QACZpE,KAAK,SAAAkE,GAAI,OACRsB,EAAKwB,SAALzF,OAAAiB,EAAA,EAAAjB,CAAA,GACK2C,EAAKiC,MACP,WAAM5E,OAAAiB,EAAA,EAAAjB,CAAA,GACkBiE,EAAK1B,OAAtBuF,UAEQpH,EAAMU,KAAKe,IACzBzB,EAAMsF,QAAQC,KAAK,6CAOhBjG,OAAAiB,EAAA,EAAAjB,CAAA,GAAQK,KAAKK,OAClBsF,QAAQC,KAAd,SAAAzH,OAA4B6B,KAAKwC,0CAG1B,IAAAkG,EAAA/I,OAAAiB,EAAA,EAAAjB,CAAA,GAGEK,KAAKkC,OACRqC,EAAO,CACXzC,GALK4G,EAEL5G,GAIAd,KANK0H,EAED1H,KAKJ2D,YAPK+D,EAEK/D,YAMVU,YARKqD,EAEkBrD,aASzB,OADAsD,QAAQC,IAAIrE,GACLtD,EAAAC,EAAAC,cAAC0H,EAAD,CAAMtE,KAAMA,EAAMK,WAAS,EAACmB,cAAe/F,KAAKqH,mBA3CxCtF,IAAMC,WA4DVC,eAbS,SAAAC,GAAK,MAC3B,CACEoB,WAAYpB,EAAMoB,WAClBvC,KAAMmB,EAAMnB,OAIW,SAAAoB,GAAQ,MACjC,CACEkB,gBAAiB,kBAAMlB,EAASkB,QAIrBpB,CAA6CwG,UCjC7CK,OArBf,WACE,OACE7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACE9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6H,EAAD,MACA/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9F,IACjCtC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW5C,IACtCxF,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW7B,IAC9CvG,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW3E,IACzCzD,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sBAAsBC,UAAWZ,KACnDxH,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOG,UAAW9F,MAGtBtC,EAAAC,EAAAC,cAACmI,GAAD,kBCzBFC,GAAe,CACnBjF,MAAO,GACPkF,KAAM,EACNC,OAAQ,IAoBKC,GAjBM,WAAsD,IAA9BxH,EAA8BtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB2K,GAAcI,EAAQ/K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzE,OAAQ6K,EAAOtI,MACb,KAAKoB,EACH,MAAO,CACL6B,MAAM3E,OAAAiK,GAAA,EAAAjK,CAAKgK,EAAOrF,QAGtB,KAAK5B,EACH,MAAO,CACL4B,MAAK,CAAGqF,EAAOpF,MAAVpG,OAAAwB,OAAAiK,GAAA,EAAAjK,CAAmBuC,EAAMoC,SAGlC,QACE,OAAOpC,ICnBPqH,GAAehK,aAAaC,QAAQ,QAAUJ,KAAKyK,MAAMtK,aAAaC,QAAQ,SAAW,GAC/F+J,GAAajK,MAAQC,aAAaC,QAAQ,SAE1C,IAkBesK,GAlBK,WAAqD,IAA9B5H,EAA8BtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB2K,GAAcI,EAAQ/K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvE,OAAQ6K,EAAOtI,MACb,KAAKnB,EACH,MAAO,CACL4B,GAAI6H,EAAO7H,GACXd,KAAM2I,EAAO3I,KACb1B,MAAOqK,EAAOrK,OAGlB,KAAKa,EACH,MAAO,GAGT,QACE,OAAO+B,ICNE6H,GAXW,WAAgD,IAApB7H,EAAoBtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAI+K,EAAQ/K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxE,OAAQ6K,EAAOtI,MACb,KAAK+B,EACH,OAAOzD,OAAAiK,GAAA,EAAAjK,CAAIgK,EAAOrG,YAGpB,QACE,OAAOpB,ICTPqH,GAAe,CACnB3G,MAAO,GACPC,QAAS,IAiBImH,GAdM,WAAuD,IAA9B9H,EAA8BtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB2K,GAAcI,EAAQ/K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1E,OAAQ6K,EAAOtI,MACb,IAAK,QACH,MAAO,CACLwB,QAAS8G,EAAO9G,QAChBD,MAAMjD,OAAAiB,EAAA,EAAAjB,CAAA,GAAMgK,EAAO/G,QAIvB,QACE,OAAOV,ICFE+H,GAPMC,YAAgB,CACnC5F,MAAOoF,GACP3I,KAAM+I,GACNxG,WAAYyG,GACZnH,MAAOoH,KCEWG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2ECJA6C,GAAQC,YACZC,GACAC,YAAgBC,IAAQC,IAAcC,MAGxCC,IAASC,OACP9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAUT,MAAOA,IACftJ,EAAAC,EAAAC,cAAC8J,GAAD,OAEFC,SAASC,eAAe,SD0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlN,KAAK,SAAAmN,GACjCA,EAAaC","file":"static/js/main.1e3c1581.chunk.js","sourcesContent":["const URL = 'https://catalog-backend.herokuapp.com';\n// const URL = 'http://localhost:5000';\nexport default URL;\n","import URL from '../Constant';\n\nclass BaseApi {\n  get(uri) {\n    return fetch(`${URL}${uri}`)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      });\n  }\n\n  post(uri, params, requireToken = true) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        // Return resolve promise on success response\n        if (response.ok) {\n          return jsonResponse;\n        }\n        // Throw new error on error response\n        return jsonResponse.then((err) => { throw err; });\n      });\n  }\n\n  put(uri, params, requireToken = true) {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      });\n  }\n\n  delete(uri, params, requireToken = true) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      });\n  }\n}\n\nexport default BaseApi;\n","import UserApi from '../utils/api/UserApi';\n\nconst userApi = new UserApi();\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(code) {\n  return dispatch => userApi.login('/api/login', code)\n    .then((json) => {\n      const user = {\n        name: json.data.user.name,\n        id: json.data.user.id,\n      };\n      const { token } = json.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      dispatch({\n        type: LOGIN,\n        name: user.name,\n        id: user.id,\n        token,\n      });\n      return user;\n    })\n    .catch((err) => {\n      const error = {\n        message: (err.message) ? err.message : 'Something went wrong!',\n        error: (err.error) ? err.error : {},\n      };\n      return dispatch({\n        type: 'ERROR',\n        message: error.message,\n        error: error.error,\n      });\n    });\n}\n\nexport function logout() {\n  return (dispatch) => {\n    // Delete user information in localStorage\n    const user = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (user) {\n      localStorage.removeItem('user');\n    }\n    if (token) {\n      localStorage.removeItem('token');\n    }\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n}\n","import BaseApi from './BaseApi';\n\nclass UserApi extends BaseApi {\n  login(uri, params) {\n    return super.post(uri, params, false);\n  }\n}\n\nexport default UserApi;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../actions/User';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickLogout = this.onClickLogout.bind(this);\n  }\n\n  onClickLogout() {\n    const props = { ...this.props };\n    props.logout();\n  }\n\n  render() {\n    const props = { ...this.props };\n    let NavbarContent;\n    if (props.user.name) {\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item nav-username\">{props.user.name}</li>\n          <li className=\"nav-item\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger nav-button\"\n              onClick={this.onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      );\n    } else {\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"btn btn-default nav-button\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">Catalog</Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarContent\"\n          aria-controls=\"navbarContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse navbar-items\" id=\"navbarContent\">\n          <ul className=\"navbar-nav\">\n            {NavbarContent}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    logout: () => dispatch(logout()),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import ItemApi from '../utils/api/ItemApi';\n\nconst itemApi = new ItemApi();\n\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const CREATE_ITEM = 'CREATE_ITEM';\n\nfunction handleError(err, dispatch) {\n  const error = {\n    message: (err.message) ? err.message : 'Something went wrong!',\n    error: (err.error) ? err.error : {},\n  };\n  dispatch({\n    type: 'ERROR',\n    message: error.message,\n    error: error.error,\n  });\n  // Logout on token error\n  if ('token' in error.error) {\n    dispatch({\n      type: 'LOGOUT',\n    });\n  }\n}\n\nexport function fetchItems() {\n  return dispatch => itemApi.get('/api/items')\n    .then(res => (\n      dispatch({\n        type: FETCH_ITEMS,\n        items: res.data.items,\n      })\n    ));\n}\n\nexport function fetchItemsByCategory(categoryID) {\n  return dispatch => itemApi.get(`/api/categories/${categoryID}/items`)\n    .then(res => (\n      dispatch({\n        type: FETCH_ITEMS,\n        items: res.data.items,\n      })\n    ))\n    .catch((err) => {\n      handleError(err, dispatch);\n    });\n}\n\nexport function fetchItem(itemId) {\n  return itemApi.get(`/api/items/${itemId}`)\n    .then(res => (res.data));\n}\n\nexport function createItem(data) {\n  return dispatch => itemApi.post(data)\n    .then((res) => {\n      dispatch({\n        type: CREATE_ITEM,\n        item: res.data.item,\n      });\n      return res.data;\n    })\n    .catch((err) => {\n      handleError(err, dispatch);\n    });\n}\n\nexport function updateItem(itemID, data) {\n  return dispatch => itemApi.put(itemID, data)\n    .then(res => res.data)\n    .catch((err) => {\n      handleError(err, dispatch);\n    });\n}\n\nexport function deleteItem(itemID) {\n  return dispatch => itemApi.delete(itemID)\n    .then(res => res.data)\n    .catch((err) => {\n      handleError(err, dispatch);\n    });\n}\n","import BaseApi from './BaseApi';\n\nclass ItemApi extends BaseApi {\n  post(data) {\n    return super.post('/api/items', data);\n  }\n\n  put(itemID, data) {\n    return super.put(`/api/items/${itemID}`, data);\n  }\n\n  delete(itemID) {\n    return super.delete(`/api/items/${itemID}`);\n  }\n}\n\nexport default ItemApi;\n","import CategoryApi from '../utils/api/CategoryApi';\n\nconst categoryApi = new CategoryApi();\n\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\n\nexport function fetchCategories() {\n  return dispatch => categoryApi.get('/api/categories')\n    .then(res => (\n      dispatch({\n        type: FETCH_CATEGORIES,\n        categories: res.data.categories,\n      })\n    ));\n}\n","import BaseApi from './BaseApi';\n\nclass CategoryApi extends BaseApi {\n  get(uri) {\n    return super.get(uri);\n  }\n}\n\nexport default CategoryApi;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchItems, fetchItemsByCategory } from '../actions/Items';\nimport { fetchCategories } from '../actions/Categories';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showItemByCategory = this.showItemByCategory.bind(this);\n    props.fetchItems();\n    props.fetchCategories();\n  }\n\n  showItemByCategory(categoryID) {\n    const props = { ...this.props };\n    props.fetchItemsByCategory(categoryID);\n  }\n\n  render() {\n    const props = { ...this.props };\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-sm-4 col-5\" style={{ borderRight: '1px solid #bbbec1' }}>\n          <h4 className=\"col-header\">Categories</h4>\n          <ul>\n            <li><NavLink to=\"/\" onClick={() => props.fetchItems()}>All</NavLink></li>\n            {\n              props.categories.map(category => (\n                <li key={category.id}>\n                  <NavLink\n                    to={`#${category.name.replace(' ', '-')}`}\n                    activeStyle={{\n                      color: 'red',\n                    }}\n                    onClick={() => {\n                      this.showItemByCategory(category.id);\n                    }}\n                  >\n                    {category.name}\n                  </NavLink>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"col-md-8 col-sm-8 col-7\">\n          {(() => {\n            if (props.user.name) {\n              return <Link to=\"/new-item\">Add Item</Link>;\n            }\n            return '';\n          }\n          )()}\n          <h4 className=\"col-header\">Latest Items</h4>\n          <ul>\n            {\n              props.items.items.map(item => (\n                <li key={item.id}>\n                  <Link to={`/item/${item.id}`}>{item.name}</Link>\n                  <span>\n                    (\n                    {item.category.name}\n                    )\n                  </span>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  fetchItems: PropTypes.func,\n  fetchCategories: PropTypes.func,\n};\n\nHome.defaultProps = {\n  fetchItems: null,\n  fetchCategories: null,\n};\n\nconst mapStateToProps = state => (\n  {\n    items: state.items,\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchItems: () => dispatch(fetchItems()),\n    fetchCategories: () => dispatch(fetchCategories()),\n    fetchItemsByCategory: categoryID => dispatch(fetchItemsByCategory(categoryID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCategories } from '../actions/Categories';\nimport { createItem, updateItem } from '../actions/Items';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      description: props.description,\n    };\n    this.isEditing = props.isEditing;\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\n    this.submit = this.submit.bind(this);\n    this.edit = this.edit.bind(this);\n    this.create = this.create.bind(this);\n  }\n\n  componentDidMount() {\n    const props = { ...this.props };\n    props.fetchCategories();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const props = { ...nextProps };\n    if ('item' in props) {\n      this.setState({\n        ...props.item,\n      });\n    } else { // set initial category for adding item\n      this.setState({\n        category_id: props.categories[0].id,\n      });\n    }\n  }\n\n  handleChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  handleChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  handleChangeCategory(e) {\n    this.setState({\n      category_id: parseInt(e.target.value, 10),\n    });\n  }\n\n  submit() {\n    const state = { ...this.state };\n    if (!state.name || !state.description) {\n      return false;\n    }\n    if (this.isEditing) {\n      return this.edit();\n    }\n    return this.create();\n  }\n\n  create() {\n    const props = { ...this.props };\n    const state = { ...this.state };\n    props.createItem(state)\n      .then((data) => {\n        this.setState({\n          name: '',\n          description: '',\n        });\n        if (data) {\n          props.history.push(`/item/${data.item.id}`);\n        }\n      });\n  }\n\n  edit() {\n    const props = { ...this.props };\n    const state = { ...this.state };\n    props.updateItem(state.id, state)\n      .then((data) => {\n        this.setState({\n          name: '',\n          description: '',\n        });\n        if (data) {\n          props.onEditSuccess();\n        }\n      });\n  }\n\n  render() {\n    const item = { ...this.state };\n    const props = { ...this.props };\n\n    return (\n      <div>\n        <h2>New Item</h2>\n        <form method=\"post\" onSubmit={e => e.preventDefault()}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Name\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"form-control text-input\"\n                name=\"name\"\n                value={item.name}\n                onChange={this.handleChangeName}\n                maxLength=\"100\"\n                required\n              />\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">\n              Category\n              <select\n                id=\"category\"\n                className=\"form-control\"\n                name=\"category_id\"\n                value={item.category_id}\n                onChange={this.handleChangeCategory}\n              >\n                {\n                  props.categories.map(category => (\n                    <option key={category.id} value={category.id}>{category.name}</option>\n                  ))\n                }\n              </select>\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">\n              Description\n              <textarea\n                id=\"description\"\n                className=\"form-control text-input\"\n                name=\"description\"\n                rows=\"10\"\n                value={item.description}\n                onChange={this.handleChangeDescription}\n                required\n              />\n            </label>\n          </div>\n\n          <input type=\"hidden\" name=\"item_id\" value=\"{{item.id}}\" />\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={this.submit}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  isEditing: PropTypes.bool,\n};\n\nForm.defaultProps = {\n  name: '',\n  description: '',\n  isEditing: false,\n};\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n    createItem: params => dispatch(createItem(params)),\n    updateItem: (itemID, params) => dispatch(updateItem(itemID, params)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport { toast } from 'react-toastify';\nimport { login } from '../actions/User';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onSigninSuccess = this.onSigninSuccess.bind(this);\n    this.onSigninFailure = this.onSigninFailure.bind(this);\n  }\n\n  onSigninSuccess(code) {\n    const props = { ...this.props };\n    props.login(code)\n      .then(() => props.history.push('/'));\n  }\n\n  onSigninFailure() {\n    toast.error('Something went wrong. Please try again later');\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign in with Google Account</h3>\n        <GoogleLogin\n          className=\"g-signin\"\n          scope=\"openid email profile\"\n          clientId=\"631390474610-5kpt48ufa9uh64g364asa6f716739p0d.apps.googleusercontent.com\"\n          accessType=\"offline\"\n          responseType=\"code\"\n          prompt=\"select_account\"\n          onSuccess={this.onSigninSuccess}\n          onFailure={this.onSigninFailure}\n        />\n        <div id=\"result\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    error: state.error,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    login: code => dispatch(login(code)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchItem, deleteItem } from '../actions/Items';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      user_id: 0,\n      id: 0,\n    };\n    this.itemID = props.match.params.item_id;\n    this.delete = this.delete.bind(this);\n  }\n\n  componentDidMount() {\n    const props = { ...this.props };\n    fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n        })\n      ))\n      .catch(() => props.history.push('/'));\n  }\n\n  delete() {\n    const props = { ...this.props };\n    props.deleteItem(this.itemID)\n      .then(() => props.history.push('/'));\n  }\n\n  render() {\n    const state = { ...this.state };\n    const props = { ...this.props };\n    let EditButtons = '';\n    if (state.user_id === props.user.id) {\n      EditButtons = (\n        <div className=\"edit-group\">\n          <Link className=\"btn-edit\" to={`/item/${state.id}/edit`}>Edit</Link>\n          <Link\n            className=\"btn-edit\"\n            to=\"#/\"\n            data-toggle=\"modal\"\n            data-target=\"#confirmDelete\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h3>{state.name}</h3>\n        <pre>{state.description}</pre>\n        { EditButtons }\n\n        {/* Modal */}\n        <div\n          className=\"modal fade\"\n          id=\"confirmDelete\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                Do you really want to delete your item?\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n                  Close\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={this.delete}\n                  data-dismiss=\"modal\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    deleteItem: itemID => dispatch(deleteItem(itemID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nclass Notification extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    const { message, error } = { ...nextProps.error };\n    toast.error(message);\n  }\n\n  render() {\n    return (\n      <ToastContainer hideProgressBar autoClose={3000} />\n    );\n  }\n}\n\nNotification.defaultProps = {\n  error: {},\n};\nconst mapStateToProps = state => (\n  {\n    error: state.error,\n  }\n);\n\nexport default connect(mapStateToProps, null)(Notification);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from './Form';\nimport { fetchCategories } from '../actions/Categories';\nimport { fetchItem } from '../actions/Items';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n    };\n    this.onSuccess = this.onSuccess.bind(this);\n  }\n\n  componentDidMount() {\n    const props = { ...this.props };\n    this.itemID = props.match.params.item_id;\n    fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n        }, () => {\n          const { user_id } = { ...this.state };\n\n          if (user_id !== props.user.id) {\n            props.history.push('/');\n          }\n        })\n      ));\n  }\n\n  onSuccess() {\n    const props = { ...this.props };\n    props.history.push(`/item/${this.itemID}`);\n  }\n\n  render() {\n    const {\n      id, name, description, category_id,\n    } = { ...this.state };\n    const item = {\n      id,\n      name,\n      description,\n      category_id,\n    };\n    console.log(item);\n    return <Form item={item} isEditing onEditSuccess={this.onSuccess} />;\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Form from './components/Form';\nimport Login from './components/Login';\nimport Item from './components/Item';\nimport Notification from './components/Notification';\nimport Edit from './components/Edit';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container main-panel\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/item/:item_id\" component={Item} />\n            <Route exact path=\"/new-item\" component={Form} />\n            <Route exact path=\"/item/:item_id/edit\" component={Edit} />\n            <Route component={Home} />\n          </Switch>\n        </div>\n        <Notification />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { FETCH_ITEMS, CREATE_ITEM } from '../actions/Items';\n\nconst initialState = {\n  items: [],\n  page: 0,\n  offset: 10,\n};\n\nconst itemsReducer = function setItemActions(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ITEMS: {\n      return {\n        items: [...action.items],\n      };\n    }\n    case CREATE_ITEM: {\n      return {\n        items: [action.item, ...state.items],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import { LOGIN, LOGOUT } from '../actions/User';\n\nconst initialState = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\ninitialState.token = localStorage.getItem('token');\n\nconst userReducer = function setUserAction(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN: {\n      return {\n        id: action.id,\n        name: action.name,\n        token: action.token,\n      };\n    }\n    case LOGOUT: {\n      return {};\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { FETCH_CATEGORIES } from '../actions/Categories';\n\nconst categoriesReducer = function setCategoryActions(state = [], action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES: {\n      return [...action.categories];\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;\n","const initialState = {\n  error: {},\n  message: '',\n};\n\nconst errorReducer = function setErrorReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ERROR': {\n      return {\n        message: action.message,\n        error: { ...action.error },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux';\nimport itemsReducer from './Items';\nimport userReducer from './User';\nimport categoriesReducer from './Categories';\nimport errorReducer from './Error';\n\nconst rootReducers = combineReducers({\n  items: itemsReducer,\n  user: userReducer,\n  categories: categoriesReducer,\n  error: errorReducer,\n});\n\nexport default rootReducers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport ReduxPromise from 'redux-promise';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(logger, ReduxPromise, thunk),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}