{"version":3,"sources":["utils/Constant.jsx","utils/api/BaseApi.jsx","utils/Helpers.jsx","actions/User.jsx","utils/api/UserApi.jsx","components/Navbar.jsx","actions/Items.jsx","utils/api/ItemApi.jsx","actions/Categories.jsx","utils/api/CategoryApi.jsx","components/Home.jsx","components/Form.jsx","components/Login.jsx","components/Item.jsx","components/Notification.jsx","components/Edit.jsx","App.js","reducers/Items.jsx","reducers/User.jsx","reducers/Categories.jsx","reducers/Error.jsx","reducers/index.jsx","serviceWorker.js","index.js"],"names":["URL","BaseApi","uri","fetch","concat","then","response","jsonResponse","json","ok","err","catch","params","requireToken","arguments","length","undefined","options","method","headers","Content-Type","body","JSON","stringify","token","localStorage","getItem","Authorization","handleError","dispatch","error","message","type","removeItem","userApi","Object","esm_get","getPrototypeOf","UserApi","prototype","this","call","LOGIN","LOGOUT","Navbar","props","_this","classCallCheck","possibleConstructorReturn","onClickLogout","bind","assertThisInitialized","objectSpread","logout","NavbarContent","user","name","react_default","a","createElement","className","onClick","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","connect","state","itemApi","data","ItemApi","itemID","FETCH_ITEMS","CREATE_ITEM","fetchItem","itemId","get","res","categoryApi","CategoryApi","FETCH_CATEGORIES","fetchCategories","categories","Home","showItemByCategory","fetchItems","categoryID","fetchItemsByCategory","_this2","style","borderRight","NavLink","map","category","key","replace","activeStyle","color","items","item","Form","description","isEditing","handleChangeName","handleChangeDescription","handleChangeCategory","submit","edit","createNewItem","history","push","nextProps","setState","category_id","e","target","value","parseInt","createItem","updateItem","onEditSuccess","FormTitle","onSubmit","preventDefault","htmlFor","onChange","maxLength","required","rows","defaultProps","post","put","Login","onSigninSuccess","onSigninFailure","code","login","toast","google_login_default","scope","clientId","accessType","responseType","prompt","onSuccess","onFailure","setItem","Item","user_id","match","item_id","delete","deleteItem","EditButtons","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","Notification","_nextProps$error","keys","Array","isArray","react_toastify_lib","hideProgressBar","autoClose","Edit","_this$state","components_Form","App","BrowserRouter","basename","components_Navbar","Switch","Route","exact","path","component","components_Notification","initialState","page","offset","itemsReducer","action","toConsumableArray","parse","userReducer","categoriesReducer","errorReducer","rootReducers","combineReducers","Boolean","window","location","hostname","middlewares","ReduxPromise","thunk","store","createStore","reducers","applyMiddleware","apply","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a2cb2ac.chunk.js","sourcesContent":["const URL = 'https://catalog-backend.herokuapp.com';\n\nexport default URL;\n","import URL from '../Constant';\n\nclass BaseApi {\n  get(uri) {\n    return fetch(`${URL}${uri}`)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  post(uri, params, requireToken = true) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        // Return resolve promise on success response\n        if (response.ok) {\n          return jsonResponse;\n        }\n        // Throw new error on error response\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  put(uri, params, requireToken = true) {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  delete(uri, params, requireToken = true) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n}\n\nexport default BaseApi;\n","export default function handleError(err, dispatch) {\n  const error = {\n    message: (err.message) ? err.message : 'Something went wrong!',\n    error: (err.error) ? err.error : {},\n  };\n  dispatch({\n    type: 'ERROR',\n    message: error.message,\n    error: error.error,\n  });\n  // Logout on token error\n  if ('token' in error.error) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT',\n    });\n  }\n}\n","import UserApi from '../utils/api/UserApi';\nimport handleError from '../utils/Helpers';\n\nconst userApi = new UserApi();\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(code) {\n  return dispatch => userApi.login('/api/login', code)\n    .then((json) => {\n      const user = {\n        name: json.data.user.name,\n        id: json.data.user.id,\n      };\n      const { token } = json.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      dispatch({\n        type: LOGIN,\n        name: user.name,\n        id: user.id,\n        token,\n      });\n      return user;\n    })\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n\nexport function logout() {\n  return (dispatch) => {\n    // Delete user information in localStorage\n    const user = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (user) {\n      localStorage.removeItem('user');\n    }\n    if (token) {\n      localStorage.removeItem('token');\n    }\n    dispatch({\n      type: LOGOUT,\n    });\n  };\n}\n","import BaseApi from './BaseApi';\n\nclass UserApi extends BaseApi {\n  login(uri, params) {\n    return super.post(uri, params, false);\n  }\n}\n\nexport default UserApi;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../actions/User';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickLogout = this.onClickLogout.bind(this);\n  }\n\n  onClickLogout() {\n    const props = { ...this.props };\n    props.logout();\n  }\n\n  render() {\n    const props = { ...this.props };\n    let NavbarContent;\n\n    // Show user's name, and logout button on navbar when user has logged in\n    if (props.user.name) {\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item nav-username\">{props.user.name}</li>\n          <li className=\"nav-item\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger nav-button\"\n              onClick={this.onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      );\n    } else {\n      // Show only login button\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"btn btn-default nav-button\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">Catalog</Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarContent\"\n          aria-controls=\"navbarContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse navbar-items\" id=\"navbarContent\">\n          <ul className=\"navbar-nav\">\n            {NavbarContent}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    logout: () => dispatch(logout()),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import ItemApi from '../utils/api/ItemApi';\nimport handleError from '../utils/Helpers';\n\nconst itemApi = new ItemApi();\n\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const CREATE_ITEM = 'CREATE_ITEM';\n\nexport function fetchItems() {\n  return dispatch => itemApi.get('/api/items')\n    .then(res => (\n      dispatch({\n        type: FETCH_ITEMS,\n        items: res.data.items,\n      })\n    ))\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n\nexport function fetchItemsByCategory(categoryID) {\n  return dispatch => itemApi.get(`/api/categories/${categoryID}/items`)\n    .then(res => (\n      {\n        type: FETCH_ITEMS,\n        items: res.data.items,\n      }\n    ))\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n\nexport function fetchItem(itemId) {\n  return itemApi.get(`/api/items/${itemId}`)\n    .then(res => (res.data))\n    .catch((err) => { throw err; });\n}\n\nexport function createItem(data) {\n  return dispatch => itemApi.post(data)\n    .then((res) => {\n      dispatch({\n        type: CREATE_ITEM,\n        item: res.data.item,\n      });\n      return res.data;\n    })\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n\nexport function updateItem(itemID, data) {\n  return dispatch => itemApi.put(itemID, data)\n    .then(res => res.data)\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n\nexport function deleteItem(itemID) {\n  return dispatch => itemApi.delete(itemID)\n    .then(res => res.data)\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n","import BaseApi from './BaseApi';\n\nclass ItemApi extends BaseApi {\n  post(data) {\n    return super.post('/api/items', data);\n  }\n\n  put(itemID, data) {\n    return super.put(`/api/items/${itemID}`, data);\n  }\n\n  delete(itemID) {\n    return super.delete(`/api/items/${itemID}`);\n  }\n}\n\nexport default ItemApi;\n","import CategoryApi from '../utils/api/CategoryApi';\nimport handleError from '../utils/Helpers';\n\nconst categoryApi = new CategoryApi();\n\nexport const FETCH_CATEGORIES = 'FETCH_CATEGORIES';\n\nexport function fetchCategories() {\n  return dispatch => categoryApi.get('/api/categories')\n    .then((res) => {\n      dispatch({\n        type: FETCH_CATEGORIES,\n        categories: res.data.categories,\n      });\n      return res.data;\n    })\n    .catch((err) => {\n      handleError(err, dispatch);\n      throw err;\n    });\n}\n","import BaseApi from './BaseApi';\n\nclass CategoryApi extends BaseApi {\n  get(uri) {\n    return super.get(uri);\n  }\n}\n\nexport default CategoryApi;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchItems, fetchItemsByCategory } from '../actions/Items';\nimport { fetchCategories } from '../actions/Categories';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showItemByCategory = this.showItemByCategory.bind(this);\n  }\n\n  /**\n   * Call API to get all available items and categories\n   */\n  componentDidMount() {\n    const props = { ...this.props };\n    props.fetchItems();\n    props.fetchCategories();\n  }\n\n  showItemByCategory(categoryID) {\n    const props = { ...this.props };\n    props.fetchItemsByCategory(categoryID);\n  }\n\n  render() {\n    const props = { ...this.props };\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-sm-4 col-5\" style={{ borderRight: '1px solid #bbbec1' }}>\n          <h4 className=\"col-header\">Categories</h4>\n          <ul>\n            <li><NavLink to=\"/\" onClick={() => props.fetchItems()}>All</NavLink></li>\n            {\n              props.categories.map(category => (\n                <li key={category.id}>\n                  <NavLink\n                    to={`#${category.name.replace(' ', '-')}`}\n                    activeStyle={{\n                      color: 'red',\n                    }}\n                    onClick={() => {\n                      this.showItemByCategory(category.id);\n                    }}\n                  >\n                    {category.name}\n                  </NavLink>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"col-md-8 col-sm-8 col-7\">\n          {(() => {\n            if (props.user.name) {\n              return <Link to=\"/new-item\">Add Item</Link>;\n            }\n            return '';\n          }\n          )()}\n          <h4 className=\"col-header\">Latest Items</h4>\n          <ul>\n            {\n              props.items.items.map(item => (\n                <li key={item.id}>\n                  <Link to={`/item/${item.id}`}>{item.name}</Link>\n                  <span>\n                    (\n                    {item.category.name}\n                    )\n                  </span>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    items: state.items,\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchItems: () => dispatch(fetchItems()),\n    fetchCategories: () => dispatch(fetchCategories()),\n    fetchItemsByCategory: categoryID => dispatch(fetchItemsByCategory(categoryID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCategories } from '../actions/Categories';\nimport { createItem, updateItem } from '../actions/Items';\n\nconst propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  isEditing: PropTypes.bool,\n};\n\nconst defaultProps = {\n  name: '',\n  description: '',\n  isEditing: false,\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      description: props.description,\n    };\n    this.isEditing = props.isEditing;\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\n    this.submit = this.submit.bind(this);\n    this.edit = this.edit.bind(this);\n    this.createNewItem = this.createNewItem.bind(this);\n  }\n\n  componentDidMount() {\n    const props = { ...this.props };\n\n    // Redirect to homepage if user hasn't logged in\n    if (!props.user.token && !this.isEditing) {\n      props.history.push('/');\n    }\n    props.fetchCategories();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const props = { ...nextProps };\n\n    // Store item's data in state if current component is Edit\n    if ('item' in props) {\n      this.setState({\n        ...props.item,\n      });\n    } else {\n      // Set default category_id as first category obtained from API\n      this.setState({\n        category_id: props.categories[0].id,\n      });\n    }\n  }\n\n  handleChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  handleChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  handleChangeCategory(e) {\n    this.setState({\n      category_id: parseInt(e.target.value, 10),\n    });\n  }\n\n  submit() {\n    const state = { ...this.state };\n\n    // Prevent submiting if name or description field is empty\n    if (state.name === '' || state.description === '') {\n      return false;\n    }\n\n    // Invoke callback function edit() if current page is editing\n    if (this.isEditing) {\n      return this.edit();\n    }\n\n    return this.createNewItem();\n  }\n\n  createNewItem() {\n    const props = { ...this.props };\n    const state = { ...this.state };\n    props.createItem(state)\n      .then((data) => {\n        if (data) {\n          props.history.push(`/item/${data.item.id}`);\n        }\n      });\n  }\n\n  edit() {\n    const props = { ...this.props };\n    const state = { ...this.state };\n    props.updateItem(state.id, state)\n      .then((data) => {\n        if (data) {\n          props.onEditSuccess();\n        }\n      });\n  }\n\n  render() {\n    const item = { ...this.state };\n    const props = { ...this.props };\n    let FormTitle = '';\n    if (!this.isEditing) {\n      FormTitle = <h2>New Item</h2>;\n    }\n    return (\n      <div>\n        {FormTitle}\n        <form method=\"post\" onSubmit={e => e.preventDefault()}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Name\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"form-control text-input\"\n                name=\"name\"\n                value={item.name}\n                onChange={this.handleChangeName}\n                maxLength=\"100\"\n                required\n              />\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">\n              Category\n              <select\n                id=\"category\"\n                className=\"form-control\"\n                name=\"category_id\"\n                value={item.category_id}\n                onChange={this.handleChangeCategory}\n              >\n                {\n                  props.categories.map(category => (\n                    <option key={category.id} value={category.id}>{category.name}</option>\n                  ))\n                }\n              </select>\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">\n              Description\n              <textarea\n                id=\"description\"\n                className=\"form-control text-input\"\n                name=\"description\"\n                rows=\"10\"\n                value={item.description}\n                onChange={this.handleChangeDescription}\n                required\n              />\n            </label>\n          </div>\n\n          <input type=\"hidden\" name=\"item_id\" value=\"{{item.id}}\" />\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={this.submit}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n    createItem: params => dispatch(createItem(params)),\n    updateItem: (itemID, params) => dispatch(updateItem(itemID, params)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport { toast } from 'react-toastify';\nimport { login } from '../actions/User';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSigninSuccess = this.onSigninSuccess.bind(this);\n    this.onSigninFailure = this.onSigninFailure.bind(this);\n  }\n\n  onSigninSuccess(code) {\n    const props = { ...this.props };\n    props.login(code)\n      .then(() => props.history.push('/'));\n  }\n\n  onSigninFailure() {\n    toast.error('Something went wrong. Please try again later');\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign in with Google Account</h3>\n        <GoogleLogin\n          className=\"g-signin\"\n          scope=\"openid email profile\"\n          clientId=\"631390474610-5kpt48ufa9uh64g364asa6f716739p0d.apps.googleusercontent.com\"\n          accessType=\"offline\"\n          responseType=\"code\"\n          prompt=\"select_account\"\n          onSuccess={this.onSigninSuccess}\n          onFailure={this.onSigninFailure}\n        />\n        <div id=\"result\" />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => (\n  {\n    login: code => dispatch(login(code)),\n  }\n);\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchItem, deleteItem } from '../actions/Items';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      user_id: 0,\n      id: 0,\n    };\n    this.itemID = props.match.params.item_id;\n    this.delete = this.delete.bind(this);\n  }\n\n  /**\n   * Fetching item's data\n   * Redirect to homepage if item's not found\n   */\n  componentDidMount() {\n    const props = { ...this.props };\n    fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n        })\n      ))\n      .catch(() => props.history.push('/'));\n  }\n\n  delete() {\n    const props = { ...this.props };\n    props.deleteItem(this.itemID)\n      .then(() => props.history.push('/'));\n  }\n\n  render() {\n    const state = { ...this.state };\n    const props = { ...this.props };\n    let EditButtons = '';\n\n    // Show edit and delete buttons if current user is item's owner\n    if (state.user_id === props.user.id) {\n      EditButtons = (\n        <div className=\"edit-group\">\n          <Link className=\"btn-edit\" to={`/item/${state.id}/edit`}>Edit</Link>\n          <Link\n            className=\"btn-edit\"\n            to=\"#/\"\n            data-toggle=\"modal\"\n            data-target=\"#confirmDelete\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h3>{state.name}</h3>\n        <pre>{state.description}</pre>\n        { EditButtons }\n\n        {/* Modal */}\n        <div\n          className=\"modal fade\"\n          id=\"confirmDelete\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                Do you really want to delete your item?\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n                  Close\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={this.delete}\n                  data-dismiss=\"modal\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    deleteItem: itemID => dispatch(deleteItem(itemID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nclass Notification extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    const { message, error } = { ...nextProps.error };\n    toast.error(message);\n    Object.keys(error).map((key) => {\n      if (Array.isArray(error[key])) {\n        return toast.error(error[key][0]);\n      }\n      return toast.error(error[key]);\n    });\n  }\n\n  render() {\n    return (\n      <ToastContainer hideProgressBar autoClose={3000} />\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    error: state.error,\n  }\n);\n\nexport default connect(mapStateToProps, null)(Notification);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from './Form';\nimport { fetchCategories } from '../actions/Categories';\nimport { fetchItem } from '../actions/Items';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n    };\n    this.onSuccess = this.onSuccess.bind(this);\n  }\n\n  componentDidMount() {\n    const props = { ...this.props };\n    this.itemID = props.match.params.item_id;\n\n    // Redirect to home page if user hasnt logged in\n    if (!props.user.token) {\n      props.history.push('/');\n    }\n\n    fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n        }, () => {\n          const { user_id } = { ...this.state };\n          // Redirect to homepage if current user is not item's owner\n          if (user_id !== props.user.id) {\n            props.history.push('/');\n          }\n        })\n      ))\n      .catch(() => (props.history.push('/')));\n  }\n\n  onSuccess() {\n    const props = { ...this.props };\n    props.history.push(`/item/${this.itemID}`);\n  }\n\n  render() {\n    const {\n      id, name, description, category_id,\n    } = { ...this.state };\n    const item = {\n      id,\n      name,\n      description,\n      category_id,\n    };\n    return (\n      <div>\n        <h2>Edit Item</h2>\n        <Form item={item} isEditing onEditSuccess={this.onSuccess} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Form from './components/Form';\nimport Login from './components/Login';\nimport Item from './components/Item';\nimport Notification from './components/Notification';\nimport Edit from './components/Edit';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/catalog-frontend\">\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container main-panel\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/item/:item_id\" component={Item} />\n            <Route exact path=\"/new-item\" component={Form} />\n            <Route exact path=\"/item/:item_id/edit\" component={Edit} />\n            <Route component={Home} />\n          </Switch>\n        </div>\n        <Notification />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { FETCH_ITEMS, CREATE_ITEM } from '../actions/Items';\n\nconst initialState = {\n  items: [],\n  page: 0,\n  offset: 10,\n};\n\nconst itemsReducer = function setItemActions(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ITEMS: {\n      return {\n        items: [...action.items],\n      };\n    }\n    case CREATE_ITEM: {\n      return {\n        items: [action.item, ...state.items],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import { LOGIN, LOGOUT } from '../actions/User';\n\nconst initialState = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\ninitialState.token = localStorage.getItem('token');\n\nconst userReducer = function setUserAction(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN: {\n      return {\n        id: action.id,\n        name: action.name,\n        token: action.token,\n      };\n    }\n    case LOGOUT: {\n      return {};\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { FETCH_CATEGORIES } from '../actions/Categories';\n\nconst categoriesReducer = function setCategoryActions(state = [], action) {\n  switch (action.type) {\n    case FETCH_CATEGORIES: {\n      return [...action.categories];\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;\n","const initialState = {\n  error: {},\n  message: '',\n};\n\nconst errorReducer = function setErrorReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ERROR': {\n      return {\n        message: action.message,\n        error: { ...action.error },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux';\nimport itemsReducer from './Items';\nimport userReducer from './User';\nimport categoriesReducer from './Categories';\nimport errorReducer from './Error';\n\nconst rootReducers = combineReducers({\n  items: itemsReducer,\n  user: userReducer,\n  categories: categoriesReducer,\n  error: errorReducer,\n});\n\nexport default rootReducers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport ReduxPromise from 'redux-promise';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\n\nlet middlewares = [ReduxPromise, thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares = [...middlewares, logger];\n}\nconst store = createStore(\n  reducers,\n  applyMiddleware(...middlewares),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}