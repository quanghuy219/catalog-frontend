{"version":3,"sources":["utils/config.js","utils/api/BaseApi.js","utils/constant.js","utils/helpers.js","actions/user.js","utils/api/UserApi.js","actions/items.js","utils/api/ItemApi.js","components/Navbar.jsx","actions/categories.js","utils/api/CategoryApi.js","components/Home.jsx","components/Form.jsx","components/Login.jsx","components/Item.jsx","components/Notification.jsx","components/Edit.jsx","components/Loader.jsx","App.js","reducers/items.js","reducers/user.js","reducers/categories.js","reducers/notification.js","reducers/loader.js","reducers/index.js","index.js"],"names":["CONFIG","API_URL","BaseApi","uri","fetch","concat","then","response","jsonResponse","json","ok","err","catch","params","requireToken","arguments","length","undefined","options","method","headers","Content-Type","body","JSON","stringify","token","localStorage","getItem","Authorization","ActionTypes","FETCH_ITEMS","CREATE_ITEM","UPDATE_ITEM","FETCH_CATEGORIES","LOGIN","LOGOUT","SHOW_ERROR_MESSAGE","SHOW_SUCCESS_MESSAGE","SHOW_LOADER","HIDE_LOADER","onStartingRequest","type","onReceivingResponse","showSuccessMessage","message","handleError","dispatch","error","removeItem","userApi","Object","esm_get","getPrototypeOf","UserApi","prototype","this","call","login","code","user","name","data","id","setItem","onLoginSuccess","itemApi","ItemApi","itemID","onSuccessFetchingItems","_ref","items","fetchItems","get","res","fetchItem","itemId","createItem","post","_ref2","item","onSuccessCreatingItem","updateItem","put","_ref3","onSuccessUpdatingItem","Navbar","props","_this","classCallCheck","possibleConstructorReturn","onClickLogout","logout","renderNavbar","react_default","a","createElement","className","onClick","Link","to","bind","assertThisInitialized","data-toggle","data-target","aria-controls","aria-expanded","aria-label","React","Component","connect","state","categoryApi","CategoryApi","fetchCategories","categories","onFetchingSucess","Home","showItemsByCategory","categoryID","fetchItemsByCategory","history","push","match","category_id","nextProps","allIds","map","byId","setState","urlCategoryID","urlCategoryName","category_name","currentCategory","replace","_this2","style","borderRight","NavLink","exact","category","key","Form","handleChangeName","e","target","value","handleChangeDescription","description","handleChangeCategory","parseInt","submit","isEditing","edit","createNewItem","onEditSuccess","objectSpread","defaultCategoryId","onSubmit","preventDefault","htmlFor","onChange","maxLength","required","rows","defaultProps","Login","onSigninSuccess","onSigninFailure","toast","google_login_default","scope","clientId","accessType","responseType","prompt","onSuccess","onFailure","Item","delete","deleteItem","renderEditButton","EditButtons","user_id","author","item_id","_this$state","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","Notification","_nextProps$notificati","notification","keys","Array","isArray","info","lib","hideProgressBar","autoClose","Edit","components_Form","display","margin","position","top","left","loader","react_spinners","color","loading","App","BrowserRouter","basename","components_Navbar","Switch","Route","path","component","Redirect","components_Notification","components_Loader","initialState","itemsReducer","action","reduce","acc","newState","parse","userReducer","categoriesReducer","notificationReducer","loaderReducer","rootReducers","combineReducers","middlewares","thunk","store","createStore","reducers","applyMiddleware","apply","toConsumableArray","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46c502e2.chunk.js","sourcesContent":["const dev = {\n  API_URL: 'http://localhost:5000',\n};\n\nconst prod = {\n  API_URL: 'https://catalog-backend.herokuapp.com',\n};\n\nconst CONFIG = (process.env.NODE_ENV === 'production') ? prod : dev;\n\nexport default CONFIG;\n","import CONFIG from '../config';\n\nclass BaseApi {\n  get(uri) {\n    return fetch(`${CONFIG.API_URL}${uri}`)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  post(uri, params, requireToken = true) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${CONFIG.API_URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        // Return resolve promise on success response\n        if (response.ok) {\n          return jsonResponse;\n        }\n        // Throw new error on error response\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  put(uri, params, requireToken = true) {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${CONFIG.API_URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  delete(uri, params, requireToken = true) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(params),\n    };\n\n    if (requireToken) {\n      const token = localStorage.getItem('token');\n      options.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return fetch(`${CONFIG.API_URL}${uri}`, options)\n      .then((response) => {\n        const jsonResponse = response.json();\n        if (response.ok) {\n          return jsonResponse;\n        }\n        return jsonResponse.then((err) => { throw err; });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n}\n\nexport default BaseApi;\n","export const ActionTypes = {\n  FETCH_ITEMS: 'FETCH_ITEMS',\n  CREATE_ITEM: 'CREATE_ITEM',\n  UPDATE_ITEM: 'UPDATE_ITEM',\n\n  FETCH_CATEGORIES: 'FETCH_CATEGORIES',\n\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n\n  SHOW_ERROR_MESSAGE: 'SHOW_ERROR_MESSAGE',\n  SHOW_SUCCESS_MESSAGE: 'SHOW_SUCCESS_MESSAGE',\n\n  SHOW_LOADER: 'SHOW_LOADER',\n  HIDE_LOADER: 'HIDE_LOADER',\n};\n\nexport default ActionTypes;\n","import { ActionTypes } from './constant';\n\n/**\n * Show spinner on screen when start an asynchronous action\n */\nexport function onStartingRequest() {\n  return {\n    type: ActionTypes.SHOW_LOADER,\n  };\n}\n\n/**\n * Hide spinner when request finishes\n */\nexport function onReceivingResponse() {\n  return {\n    type: ActionTypes.HIDE_LOADER,\n  };\n}\n\n/**\n * Show error messages when calling API failed\n */\nexport function showErrorMessage(message, error) {\n  return {\n    type: ActionTypes.SHOW_ERROR_MESSAGE,\n    message,\n    error,\n  };\n}\n\n/**\n * Show successfull message when calling API returns success\n */\nexport function showSuccessMessage(message) {\n  return {\n    type: ActionTypes.SHOW_SUCCESS_MESSAGE,\n    message,\n  };\n}\n\n/**\n * Handle error when sending a request\n * Dispatch ERROR action to show notification on screen, hide loading spinner\n */\nexport function handleError(err, dispatch) {\n  const error = {\n    message: (err.message) ? err.message : 'Something went wrong!',\n    error: (err.error) ? err.error : {},\n  };\n  dispatch(onReceivingResponse());\n  dispatch({\n    type: ActionTypes.SHOW_ERROR_MESSAGE,\n    message: error.message,\n    error: error.error,\n  });\n  // Logout on token error\n  if ('token' in error.error) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT',\n    });\n  }\n}\n","import UserApi from '../utils/api/UserApi';\nimport { ActionTypes } from '../utils/constant';\nimport {\n  handleError,\n  onStartingRequest,\n  onReceivingResponse,\n  showSuccessMessage,\n} from '../utils/helpers';\n\nconst userApi = new UserApi();\n\nfunction onLoginSuccess(name, id, token) {\n  return {\n    type: ActionTypes.LOGIN,\n    name,\n    id,\n    token,\n  };\n}\n\nexport function login(code) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return userApi.login('/api/login', code)\n      .then((json) => {\n        dispatch(onReceivingResponse());\n        const user = {\n          name: json.data.user.name,\n          id: json.data.user.id,\n        };\n        const { token } = json.data;\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n        dispatch(onLoginSuccess(user.name, user.id, token));\n        dispatch(showSuccessMessage(json.message));\n        return user;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function logout() {\n  return (dispatch) => {\n    // Delete user information in localStorage\n    const user = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (user) {\n      localStorage.removeItem('user');\n    }\n    if (token) {\n      localStorage.removeItem('token');\n    }\n    dispatch({\n      type: ActionTypes.LOGOUT,\n    });\n  };\n}\n","import BaseApi from './BaseApi';\n\nclass UserApi extends BaseApi {\n  login(uri, params) {\n    return super.post(uri, params, false);\n  }\n}\n\nexport default UserApi;\n","import ItemApi from '../utils/api/ItemApi';\nimport { ActionTypes } from '../utils/constant';\nimport {\n  handleError,\n  onStartingRequest,\n  onReceivingResponse,\n  showSuccessMessage,\n} from '../utils/helpers';\n\nconst itemApi = new ItemApi();\n\nfunction onSuccessFetchingItems({ items }) {\n  return {\n    type: ActionTypes.FETCH_ITEMS,\n    items,\n  };\n}\n\nfunction onSuccessCreatingItem({ item }) {\n  return {\n    type: ActionTypes.CREATE_ITEM,\n    item,\n  };\n}\n\nfunction onSuccessUpdatingItem({ item }) {\n  return {\n    type: ActionTypes.UPDATE_ITEM,\n    item,\n  };\n}\n\nexport function fetchItems() {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.get('/api/items')\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(onSuccessFetchingItems(res.data));\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function fetchItemsByCategory(categoryID) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.get(`/api/categories/${categoryID}/items`)\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(onSuccessFetchingItems(res.data));\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function fetchItem(itemId) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.get(`/api/items/${itemId}`)\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        return res.data;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function createItem(data) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.post(data)\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(onSuccessCreatingItem(res.data));\n        dispatch(showSuccessMessage(res.message));\n        return res.data;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function updateItem(itemID, data) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.put(itemID, data)\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(onSuccessUpdatingItem(res.data));\n        dispatch(showSuccessMessage(res.message));\n        return res.data;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport function deleteItem(itemID) {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return itemApi.delete(itemID)\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(showSuccessMessage(res.message));\n        return res.data;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n","import BaseApi from './BaseApi';\n\nclass ItemApi extends BaseApi {\n  post(data) {\n    return super.post('/api/items', data);\n  }\n\n  put(itemID, data) {\n    return super.put(`/api/items/${itemID}`, data);\n  }\n\n  delete(itemID) {\n    return super.delete(`/api/items/${itemID}`);\n  }\n}\n\nexport default ItemApi;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../actions/user';\nimport { fetchItems } from '../actions/items';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickLogout = this.onClickLogout.bind(this);\n  }\n\n  onClickLogout = () => {\n    this.props.logout();\n  }\n\n  renderNavbar = () => {\n    let NavbarContent;\n    // Show user's name, and logout button on navbar when user has logged in\n    if (this.props.user.name) {\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item nav-username\">{this.props.user.name}</li>\n          <li className=\"nav-item\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger nav-button\"\n              onClick={this.onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      );\n    } else {\n      // Show only login button\n      NavbarContent = (\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"btn btn-default nav-button\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n    return NavbarContent;\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\" onClick={this.props.fetchItems}>Catalog</Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarContent\"\n          aria-controls=\"navbarContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse navbar-items\" id=\"navbarContent\">\n          <ul className=\"navbar-nav\">\n            {this.renderNavbar()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    logout: () => dispatch(logout()),\n    fetchItems: () => dispatch(fetchItems())\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import CategoryApi from '../utils/api/CategoryApi';\nimport { ActionTypes } from '../utils/constant';\nimport { handleError, onStartingRequest, onReceivingResponse } from '../utils/helpers';\n\nconst categoryApi = new CategoryApi();\n\nfunction onFetchingSucess({ categories }) {\n  return {\n    type: ActionTypes.FETCH_CATEGORIES,\n    categories,\n  };\n}\n\nexport function fetchCategories() {\n  return (dispatch) => {\n    dispatch(onStartingRequest());\n    return categoryApi.get('/api/categories')\n      .then((res) => {\n        dispatch(onReceivingResponse());\n        dispatch(onFetchingSucess(res.data));\n        return res.data;\n      })\n      .catch((err) => {\n        handleError(err, dispatch);\n        throw err;\n      });\n  };\n}\n\nexport default fetchCategories;\n","import BaseApi from './BaseApi';\n\nclass CategoryApi extends BaseApi {\n  get(uri) {\n    return super.get(uri);\n  }\n}\n\nexport default CategoryApi;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchItems, fetchItemsByCategory } from '../actions/items';\nimport { fetchCategories } from '../actions/categories';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      categories: []\n    }\n  }\n  \n  /**\n   * Call API to get all available items and categories\n   */\n  componentDidMount() {\n    this.props.fetchCategories();\n    const categoryID = this.props.match.params.category_id;\n    if (categoryID) {\n      this.showItemsByCategory(categoryID);\n    } else {\n      this.props.fetchItems();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Convert object in nextProps.items to array of items stored in component's state\n    const items = nextProps.items.allIds.map(id => nextProps.items.byId[id]);\n    const categories = nextProps.categories.allIds.map(id => nextProps.categories.byId[id]);\n    this.setState({\n      items,\n      categories\n    })\n  }\n\n  shouldComponentUpdate() {\n    const categories = this.props.categories;\n    // Call componentDidUpdate when all categories are ready\n    if (categories.length === 0) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * When showing items by category, check category's name in url\n   * If category's name is invalid, correct category's name\n   */\n  componentDidUpdate() {\n    const urlCategoryID = this.props.match.params.category_id;\n    if (urlCategoryID) {\n      const urlCategoryName = this.props.match.params.category_name;\n      const currentCategory = this.props.categories.byId[urlCategoryID];\n      if (!urlCategoryName || urlCategoryName !== currentCategory.name.replace(' ', '-')) {\n        this.props.history.push(`/category/${currentCategory.id}/${currentCategory.name.replace(' ', '-')}`)\n      }\n    }\n  }\n\n  showItemsByCategory = (categoryID) => {\n    this.props.fetchItemsByCategory(categoryID)\n      .catch(err => {\n        this.props.history.push('/');\n        this.props.fetchItems();\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-sm-4 col-5\" style={{ borderRight: '1px solid #bbbec1' }}>\n          <h4 className=\"col-header\">Categories</h4>\n          <ul>\n            <li><NavLink exact to=\"/\" onClick={this.props.fetchItems}>All</NavLink></li>\n            {\n              this.state.categories.map(category => (\n                <li key={category.id}>\n                  <NavLink\n                    to={`/category/${category.id}/${category.name.replace(' ', '-')}`}\n                    onClick={() => this.showItemsByCategory(category.id)}\n                  >\n                    {category.name}\n                  </NavLink>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"col-md-8 col-sm-8 col-7\">\n          {\n            (this.props.user.name) && <Link to=\"/new-item\">Add Item</Link>\n          }\n          <h4 className=\"col-header\">Latest Items</h4>\n          <ul>\n            {\n              this.state.items.map(item => (\n                <li key={item.id}>\n                  <Link to={`/item/${item.id}`}>{item.name}</Link>\n                  <span>\n                    (\n                    {item.category.name}\n                    )\n                  </span>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    items: state.items,\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchItems: () => dispatch(fetchItems()),\n    fetchCategories: () => dispatch(fetchCategories()),\n    fetchItemsByCategory: categoryID => dispatch(fetchItemsByCategory(categoryID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCategories } from '../actions/categories';\nimport { createItem, updateItem } from '../actions/items';\n\nconst propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  isEditing: PropTypes.bool,\n};\n\nconst defaultProps = {\n  name: '',\n  description: '',\n  isEditing: false,\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      description: props.description,\n    };\n    this.isEditing = props.isEditing;\n  }\n\n  componentDidMount() {\n    // Redirect to homepage if user hasn't logged in\n    if (!this.props.user.token && !this.isEditing) {\n      this.props.history.push('/');\n    }\n    this.props.fetchCategories();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Store item's data in state if current component is Edit\n    if ('item' in nextProps) {\n      this.setState({\n        ...nextProps.item,\n      });\n    } else {\n      // Set default category_id as first category obtained from API\n      const defaultCategoryId = nextProps.categories.allIds[0];\n      this.setState({\n        category_id: nextProps.categories.byId[defaultCategoryId].id,\n      });\n    }\n  }\n\n  handleChangeName = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  handleChangeDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  handleChangeCategory = (e) => {\n    this.setState({\n      category_id: parseInt(e.target.value, 10),\n    });\n  }\n\n  submit = () => {\n    // Prevent submiting if name or description field is empty\n    if (this.state.name === '' || this.state.description === '') {\n      return false;\n    }\n\n    // Invoke callback function edit() if current page is editing\n    if (this.isEditing) {\n      return this.edit();\n    }\n\n    return this.createNewItem();\n  }\n\n  createNewItem = () => {\n    this.props.createItem(this.state)\n      .then((data) => {\n        if (data) {\n          this.props.history.push(`/item/${data.item.id}`);\n        }\n      });\n  }\n\n  edit = () => {\n    this.props.updateItem(this.state.id, this.state)\n      .then((data) => {\n        if (data) {\n          this.props.onEditSuccess();\n        }\n      });\n  }\n\n  render() {\n    const item = { ...this.state };\n    const categories = this.props.categories.allIds.map(id => this.props.categories.byId[id]);\n    return (\n      <div>\n        { (!this.isEditing && <h2>New Item</h2>) }\n        <form method=\"post\" onSubmit={e => e.preventDefault()}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Name\n              <input\n                type=\"text\"\n                id=\"name\"\n                className=\"form-control text-input\"\n                name=\"name\"\n                value={item.name}\n                onChange={this.handleChangeName}\n                maxLength=\"100\"\n                required\n              />\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">\n              Category\n              <select\n                id=\"category\"\n                className=\"form-control\"\n                name=\"category_id\"\n                value={item.category_id}\n                onChange={this.handleChangeCategory}\n              >\n                {\n                  categories.map(category => (\n                    <option key={category.id} value={category.id}>{category.name}</option>\n                  ))\n                }\n              </select>\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">\n              Description\n              <textarea\n                id=\"description\"\n                className=\"form-control text-input\"\n                name=\"description\"\n                rows=\"10\"\n                value={item.description}\n                onChange={this.handleChangeDescription}\n                required\n              />\n            </label>\n          </div>\n\n          <input type=\"hidden\" name=\"item_id\" value=\"{{item.id}}\" />\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={this.submit}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n    createItem: params => dispatch(createItem(params)),\n    updateItem: (itemID, params) => dispatch(updateItem(itemID, params)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport { toast } from 'react-toastify';\nimport { login } from '../actions/user';\n\nclass Login extends React.Component {\n  onSigninSuccess = (code) => {\n    this.props.login(code)\n      .then(() => this.props.history.push('/'));\n  }\n\n  onSigninFailure = () => {\n    toast.error('Something went wrong. Please try again later');\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign in with Google Account</h3>\n        <GoogleLogin\n          className=\"g-signin\"\n          scope=\"openid email profile\"\n          clientId=\"631390474610-5kpt48ufa9uh64g364asa6f716739p0d.apps.googleusercontent.com\"\n          accessType=\"offline\"\n          responseType=\"code\"\n          prompt=\"select_account\"\n          onSuccess={this.onSigninSuccess}\n          onFailure={this.onSigninFailure}\n        />\n        <div id=\"result\" />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => (\n  {\n    login: code => dispatch(login(code)),\n  }\n);\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchItem, deleteItem } from '../actions/items';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      category: '',\n      author: '',\n      user_id: 0,\n      id: 0,\n    };\n    this.itemID = props.match.params.item_id;\n  }\n\n  /**\n   * Fetching item's data\n   * Redirect to homepage if item's not found\n   */\n  componentDidMount() {\n    const item = this.props.items.byId[this.itemID];\n    // Find item in current state first\n    // If not found, call API to fetch item\n    if (item) {\n      this.setState({\n        ...item,\n        category: item.category.name,\n        author: item.user.name\n      })\n    } else {\n      this.props.fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n          category: data.item.category.name,\n          author: data.item.user.name\n        })\n      ))\n      .catch(() => this.props.history.push('/'));\n    }\n  }\n\n  delete = () => {\n    this.props.deleteItem(this.itemID)\n      .then(() => this.props.history.push('/'));\n  }\n\n  renderEditButton = () => {\n    let EditButtons = '';\n    // Show edit and delete buttons if current user is item's owner\n    if (this.state.user_id === this.props.user.id) {\n      EditButtons = (\n        <div className=\"edit-group\">\n          <Link className=\"btn-edit\" to={`/item/${this.state.id}/edit`}>Edit</Link>\n          <Link\n            className=\"btn-edit\"\n            to=\"#/\"\n            data-toggle=\"modal\"\n            data-target=\"#confirmDelete\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n    return EditButtons;\n  }\n\n  render() {\n    const { name, description, category, author } = this.state;\n    return (\n      <div>\n        <h3>{name}</h3>\n        <p>\n        <label className=\"item-label\">Category:</label>\n          {category}\n        </p>\n        <p>\n          <label className=\"item-label\">Author:</label>\n          {author}\n        </p>\n\n        <p>Description:</p>\n        <pre>{description}</pre>\n        { this.renderEditButton() }\n\n        {/* Modal */}\n        <div\n          className=\"modal fade\"\n          id=\"confirmDelete\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                Do you really want to delete your item?\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n                  Close\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={this.delete}\n                  data-dismiss=\"modal\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    items: state.items,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchItem: itemID => dispatch(fetchItem(itemID)),\n    deleteItem: itemID => dispatch(deleteItem(itemID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nclass Notification extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    const { message, error, type } = { ...nextProps.notification };\n    if (type === 'ERROR') {\n      toast.error(message);\n      Object.keys(error).map((key) => {\n        if (Array.isArray(error[key])) {\n          return toast.error(error[key][0]);\n        }\n        return toast.error(error[key]);\n      });\n    } else {\n      toast.info(message);\n    }\n  }\n\n  render() {\n    return (\n      <ToastContainer hideProgressBar autoClose={3000} />\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    notification: state.notification,\n  }\n);\n\nexport default connect(mapStateToProps, null)(Notification);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from './Form';\nimport { fetchCategories } from '../actions/categories';\nimport { fetchItem } from '../actions/items';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n    };\n    this.itemID = props.match.params.item_id;\n  }\n\n  componentDidMount() {\n    // Redirect to home page if user hasnt logged in\n    if (!this.props.user.token) {\n      this.props.history.push('/');\n    }\n\n    this.props.fetchItem(this.itemID)\n      .then(data => (\n        this.setState({\n          ...data.item,\n        }, () => {\n          const { user_id } = this.state;\n          // Redirect to homepage if current user is not item's owner\n          if (user_id !== this.props.user.id) {\n            this.props.history.push('/');\n          }\n        })\n      ))\n      .catch(() => (this.props.history.push('/')));\n  }\n\n  onSuccess = () => {\n    this.props.history.push(`/item/${this.itemID}`);\n  }\n\n  render() {\n    const item = { ...this.state };\n    return (\n      <div>\n        <h2>Edit Item</h2>\n        <Form item={item} isEditing onEditSuccess={this.onSuccess} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    categories: state.categories,\n    user: state.user,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchCategories: () => dispatch(fetchCategories()),\n    fetchItem: itemID => dispatch(fetchItem(itemID)),\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\n","import React from 'react';\nimport { ClipLoader } from 'react-spinners';\nimport { connect } from 'react-redux';\n\nconst style = {\n  display: 'block',\n  margin: '0 auto',\n  position: 'fixed',\n  top: '30%',\n  left: '50%',\n};\n\nfunction Loader(props) {\n  return (\n    <div className=\"spinner\" style={style}>\n      <ClipLoader\n        color=\"#36D7B7\"\n        loading={props.loader.loading}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => (\n  {\n    loader: state.loader,\n  }\n);\n\nexport default connect(mapStateToProps, null)(Loader);\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Form from './components/Form';\nimport Login from './components/Login';\nimport Item from './components/Item';\nimport Notification from './components/Notification';\nimport Edit from './components/Edit';\nimport Loader from './components/Loader';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename=\"/catalog-frontend\">\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container main-panel\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/category/:category_id\" component={Home} />\n            <Route exact path=\"/category/:category_id/:category_name\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/item/:item_id\" component={Item} />\n            <Route exact path=\"/new-item\" component={Form} />\n            <Route exact path=\"/item/:item_id/edit\" component={Edit} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n        <Notification />\n        <Loader />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from '../utils/constant';\n\nconst initialState = {\n  byId: {},\n  allIds: [],\n};\n\nconst itemsReducer = function setItemActions(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.FETCH_ITEMS: {\n      const items = action.items.reduce((acc, item) => {\n        acc.byId[item.id] = item;\n        acc.allIds.push(item.id);\n        return acc;\n      }, {\n        byId: {},\n        allIds: [],\n      });\n      return items;\n    }\n    case ActionTypes.CREATE_ITEM: {\n      const newState = { ...state };\n      newState.byId[action.item.id] = action.item;\n      newState.allIds.push(action.item.id);\n      return {\n        ...newState,\n      };\n    }\n    case ActionTypes.UPDATE_ITEM: {\n      const newState = { ...state };\n      newState.byId[action.item.id] = action.item;\n      return {\n        ...newState,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import { ActionTypes } from '../utils/constant';\n\nconst initialState = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\ninitialState.token = localStorage.getItem('token');\n\nconst userReducer = function setUserAction(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.LOGIN: {\n      return {\n        id: action.id,\n        name: action.name,\n        token: action.token,\n      };\n    }\n    case ActionTypes.LOGOUT: {\n      return {};\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { ActionTypes } from '../utils/constant';\n\nconst initialState = {\n  byId: {},\n  allIds: [],\n};\n\nconst categoriesReducer = function setCategoryActions(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.FETCH_CATEGORIES: {\n      const categories = action.categories.reduce((acc, category) => {\n        acc.byId[category.id] = category;\n        acc.allIds.push(category.id);\n        return acc;\n      }, {\n        byId: {},\n        allIds: [],\n      });\n      return categories;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default categoriesReducer;\n","import { ActionTypes } from '../utils/constant';\n\nconst initialState = {\n  error: {},\n  message: '',\n  type: '',\n};\n\nconst notificationReducer = function setNotificationReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_ERROR_MESSAGE: {\n      return {\n        type: 'ERROR',\n        message: action.message,\n        error: { ...action.error },\n      };\n    }\n\n    case ActionTypes.SHOW_SUCCESS_MESSAGE: {\n      return {\n        type: 'SUCCESS',\n        message: action.message,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;\n","import { ActionTypes } from '../utils/constant';\n\nconst initialState = {\n  loading: false,\n};\n\nconst loaderReducer = function setLoadingAction(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.SHOW_LOADER: {\n      return {\n        loading: true,\n      };\n    }\n    case ActionTypes.HIDE_LOADER: {\n      return {\n        loading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import { combineReducers } from 'redux';\nimport itemsReducer from './items';\nimport userReducer from './user';\nimport categoriesReducer from './categories';\nimport notificationReducer from './notification';\nimport loaderReducer from './loader';\n\nconst rootReducers = combineReducers({\n  items: itemsReducer,\n  user: userReducer,\n  categories: categoriesReducer,\n  notification: notificationReducer,\n  loader: loaderReducer,\n});\n\nexport default rootReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reducers from './reducers';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\n\nlet middlewares = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n  middlewares = [...middlewares, logger];\n}\nconst store = createStore(\n  reducers,\n  applyMiddleware(...middlewares),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}